client_max_body_size 100M;

# ------------------------------------------------------------------------------------
# Gzip Settings
# ------------------------------------------------------------------------------------
gzip on;
gzip_vary on;
gzip_proxied any;
gzip_comp_level 3;
gzip_buffers 16 8k;
gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
gzip_min_length 512;

# ------------------------------------------------------------------------------------
# Configure a cache bucket
# ------------------------------------------------------------------------------------
proxy_cache_path /var/lib/nginx/cache levels=1:2 keys_zone=backcache:8m max_size=800m inactive=900m use_temp_path=off;

# ------------------------------------------------------------------------------------
# Start server config
# ------------------------------------------------------------------------------------
server {
    # ------------------------------------------------------------------------------------
    # Config Nginx + Certbot
    # ------------------------------------------------------------------------------------
    # Listen to port 443 on both IPv4 and IPv6.
    listen 443 ssl default_server reuseport;
    listen [::]:443 ssl default_server reuseport;
    http2 on;

    # Domain names this server should respond to.
    server_name dev.fdrichter.work;
    # access_log /logs/fdrichter.access.log main;
    # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/site/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/site/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/site/chain.pem;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    
    # Improve HTTPS performance with session resumption
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Enable server-side protection against BEAST attacks
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
    
    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

	add_header          Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
	add_header          X-Content-Type-Options nosniff;
    add_header          X-Frame-Options SAMEORIGIN;
    add_header          X-XSS-Protection "1; mode=block";

    set_real_ip_from 0.0.0.0/0; 
    real_ip_header CF-Connecting-IP; # For Cloudflare

    # Enable OCSP stapling.
    if ($http_user_agent ~ (libwww|Wget|LWP|damnBot|BBBike|java|spider|crawl|Yandex|YandexBot) ) {
        return 403;
    }

    proxy_buffers 32 32k;
    proxy_buffer_size 32k;
    # ------------------------------------------------------------------------------------
    # Oracle APEX + ORDS
    # ------------------------------------------------------------------------------------
    location / {
        rewrite ^/(.*) https://$server_name/ords/r/app/app/login_desktop redirect;
    }

    location /ords/_/landing {
        rewrite ^/(.*) https://$server_name redirect;
    }

    # # Block access /ords/r/apex
    # location ~ ^/ords/r/apex/ {
    #     return 403;
    # }

    # # # Block access /ords/r/sql-developer
    location ~ ^/ords/sql-developer {
        return 403;
    }

    # # # Block access /ords/r/_
    location ~ ^/ords/_ {
        return 403;
    }

    # Static files
    location ~* /ords/(.*)/r/([0-9/]*)files/static/v([0-9]+)/ {
        proxy_pass http://apex_ords:8181;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        proxy_cache backcache;
        proxy_cache_key $host$uri$is_args$args;
        proxy_cache_valid 200 24h;
        proxy_cache_valid 302 60m;
        proxy_cache_valid 404 1m;
        add_header X-Cache-Status $upstream_cache_status;
        expires 300d;
    }

    # ORDS reverse proxy
    location /ords/ {
        proxy_pass http://apex_ords:8181/ords/;
        proxy_set_header Origin "";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr; # http_cf_connecting_ip
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;
    }
    
    # Apex Images
    location /i/ {
        proxy_pass http://apex_ords:8181/i/;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_cache backcache;
        proxy_cache_key $host$uri$is_args$args;
        proxy_cache_valid 200 24h;
        proxy_cache_valid 302 60m;
        proxy_cache_valid 404 1m;
        add_header X-Cache-Status $upstream_cache_status;
        expires 300d;
    }

}
